
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
};

/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #include "beakl_shift_pairs.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      lshift_caps: lshift_caps {
        compatible = "zmk,behavior-tap-dance";
        label = "lshift_caps";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp LSHFT>, <&caps_word>;
      };

      rshift_caps: rshift_caps {
        compatible = "zmk,behavior-tap-dance";
        label = "rshift_caps";
        #binding-cells = <0>;
        tapping-term-ms = <200>;
        bindings = <&kp RSHFT>, <&caps_word>;
      };

      bspc_del: backspace_delete {
        compatible = "zmk,behavior-mod-morph";
        label = "BACKSPACE_DELETE";
        #binding-cells = <0>;
        bindings = <&kp BACKSPACE>, <&kp DELETE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
        keep-mods = <(MOD_RSFT)>;
      };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
 &kp EQUAL    &kp N1    &kp N2    &kp N3     &kp N4  &kp N5                &tog 3                                                                 &mo 5  &kp N6  &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
   &kp TAB     &kp Q     &kp W     &kp E      &kp R   &kp T                &none                                                                  &none   &kp Y   &kp U      &kp I     &kp O     &kp P   &kp BSLH
   &kp ESC     &kp A     &kp S     &kp D      &kp F   &kp G            &caps_word  &kp LALT  &kp LCTRL                  &kp RCTRL   &kp LGUI     &tog 1   &kp H   &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
 &lshift_caps  &kp Z     &kp X     &kp C      &kp V   &kp B                                   &kp HOME                  &kp PG_UP                         &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH  &rshift_caps
     &mo 4  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                      &bspc_del &kp DEL    &kp END                  &kp PG_DN  &kp ENTER  &kp SPACE          &kp UP   &kp DOWN  &kp LBKT  &kp RBKT      &mo 4
            >;
        };

        layer_beakl42 {
            bindings = <
 &kp EQUAL     &n3pipe    &n2at     &n1dllr    &n0hash  &n4prcnt            &tog 3                                                                &mo 5   &n7caret &n6lpar  &n5tilde  &n9rpar   &n8amps &kp MINUS
   &kp TAB      &kp Q     &kp H     &kp O      &kp U    &kp X               &none                                                                &tog 0   &kp G   &kp C     &kp R     &kp F     &kp V   &kp BSLH
   &kp ESC    &sqtqmark   &kp I     &kp E      &kp A  &dotgrave        &caps_word  &kp LALT  &kp LCTRL                  &kp RCTRL   &kp LGUI     &tog 0   &kp D   &kp S     &kp T     &kp N     &kp B    &kp SQT
    &trans      &kp J     &kp Y     &kp K  &commaunder &dqtexcl                               &kp HOME                  &kp PG_UP                         &kp W   &kp M     &kp L     &kp P     &kp Z      &trans
    &trans   &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                     &bspc_del   &mo 2     &kp END                  &kp PG_DN  &kp ENTER  &kp SPACE          &kp UP  &kp DOWN  &kp LBKT  &kp RBKT     &trans
            >;
        };

        layer_Beakl42_Punc {
            bindings = <
 &kp EQUAL   &kp TAB      &kp AT   &kp DLLR     &kp HASH    &kp TAB          &trans                                                                 &none    &none    &kp TILDE  &kp UNDERSCORE   &kp GRAVE  &none      &none
 &kp TAB     &kp TAB      &kp LT  &kp EQUAL     &kp GT      &none            &none                                                                  &none    &none    &kp LEFT_BRACKET  &kp CARET  &kp RIGHT_BRACKET    &none   &none
 &kp ESC  &kp BACKSLASH  &kp LEFT_PARENTHESIS  &kp MINUS  &kp RIGHT_PARENTHESIS   &kp PLUS               &none  &kp LALT  &kp LCTRL                  &kp RCTRL   &kp LGUI      &none  &kp PERCENT    &kp LEFT_BRACE   &kp SEMICOLON    &kp RIGHT_BRACE  &kp EXCLAMATION          &kp SQT
 &trans      &none          &kp ASTERISK  &kp COLON              &kp SLASH  &kp ENTER                                 &kp HOME                  &kp PG_UP                              &none          &kp PIPE       &kp TILDE      &kp AMPERSAND            &none  &kp RIGHT_SHIFT
 &trans      &kp GRAVE              &kp CAPS   &kp LEFT              &kp RIGHT                       &bspc_del   &none    &kp END                  &kp PG_DN  &kp ENTER  &kp SPACE                         &kp UP        &kp DOWN           &kp LBKT         &kp RBKT           &trans
            >;
        };

        layer_keypad {
            bindings = <
    &trans     &trans    &trans    &trans     &trans  &trans            &trans                                                  &trans  &trans  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB     &trans    &trans    &trans     &trans  &trans            &trans                                                   &none  &trans   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC     &trans    &trans    &trans     &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS     &trans
    &trans     &trans    &trans    &trans     &trans  &trans                            &trans                  &trans                  &trans   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER     &trans
    &trans  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &trans  &trans  &trans                  &trans  &trans  &trans              &kp UP      &kp DOWN     &kp KP_DOT           &trans     &trans
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6             &none                                                   &mo 5  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                           &mo 5  &tog 0      &tog 4       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };
    };
};
